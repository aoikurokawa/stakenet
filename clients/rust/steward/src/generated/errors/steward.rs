//! This code was AUTOGENERATED using the codama library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun codama to update it.
//!
//! <https://github.com/codama-idl/codama>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum StewardError {
    /// 6000 - Invalid set authority type: 0: SetAdmin, 1: SetBlacklistAuthority, 2: SetParametersAuthority
    #[error("Invalid set authority type: 0: SetAdmin, 1: SetBlacklistAuthority, 2: SetParametersAuthority")]
    InvalidAuthorityType = 0x1770,
    /// 6001 - Scoring must be completed before any other steps can be taken
    #[error("Scoring must be completed before any other steps can be taken")]
    ScoringNotComplete = 0x1771,
    /// 6002 - Validator does not exist at the ValidatorList index provided
    #[error("Validator does not exist at the ValidatorList index provided")]
    ValidatorNotInList = 0x1772,
    /// 6003 - Unauthorized to perform this action
    #[error("Unauthorized to perform this action")]
    Unauthorized = 0x1773,
    /// 6004 - Bitmask index out of bounds
    #[error("Bitmask index out of bounds")]
    BitmaskOutOfBounds = 0x1774,
    /// 6005 - Invalid state
    #[error("Invalid state")]
    InvalidState = 0x1775,
    /// 6006 - Stake state is not Stake
    #[error("Stake state is not Stake")]
    StakeStateIsNotStake = 0x1776,
    /// 6007 - Validator not eligible to be added to the pool. Must meet stake minimum
    #[error("Validator not eligible to be added to the pool. Must meet stake minimum")]
    ValidatorBelowStakeMinimum = 0x1777,
    /// 6008 - Validator not eligible to be added to the pool. Must meet recent voting minimum
    #[error("Validator not eligible to be added to the pool. Must meet recent voting minimum")]
    ValidatorBelowLivenessMinimum = 0x1778,
    /// 6009 - Validator History vote data not recent enough to be used for scoring. Must be updated this epoch
    #[error("Validator History vote data not recent enough to be used for scoring. Must be updated this epoch")]
    VoteHistoryNotRecentEnough = 0x1779,
    /// 6010 - Validator History stake data not recent enough to be used for scoring. Must be updated this epoch
    #[error("Validator History stake data not recent enough to be used for scoring. Must be updated this epoch")]
    StakeHistoryNotRecentEnough = 0x177A,
    /// 6011 - Cluster History data not recent enough to be used for scoring. Must be updated this epoch
    #[error(
        "Cluster History data not recent enough to be used for scoring. Must be updated this epoch"
    )]
    ClusterHistoryNotRecentEnough = 0x177B,
    /// 6012 - Steward State Machine is paused. No state machine actions can be taken
    #[error("Steward State Machine is paused. No state machine actions can be taken")]
    StateMachinePaused = 0x177C,
    /// 6013 - Config parameter is out of range or otherwise invalid
    #[error("Config parameter is out of range or otherwise invalid")]
    InvalidParameterValue = 0x177D,
    /// 6014 - Instant unstake cannot be performed yet.
    #[error("Instant unstake cannot be performed yet.")]
    InstantUnstakeNotReady = 0x177E,
    /// 6015 - Validator index out of bounds of state machine
    #[error("Validator index out of bounds of state machine")]
    ValidatorIndexOutOfBounds = 0x177F,
    /// 6016 - ValidatorList account type mismatch
    #[error("ValidatorList account type mismatch")]
    ValidatorListTypeMismatch = 0x1780,
    /// 6017 - An operation caused an overflow/underflow
    #[error("An operation caused an overflow/underflow")]
    ArithmeticError = 0x1781,
    /// 6018 - Validator not eligible for removal. Must be delinquent or have closed vote account
    #[error("Validator not eligible for removal. Must be delinquent or have closed vote account")]
    ValidatorNotRemovable = 0x1782,
    /// 6019 - Validator was marked active when it should be deactivating
    #[error("Validator was marked active when it should be deactivating")]
    ValidatorMarkedActive = 0x1783,
    /// 6020 - Max validators reached
    #[error("Max validators reached")]
    MaxValidatorsReached = 0x1784,
    /// 6021 - Epoch Maintenance must be called before continuing
    #[error("Epoch Maintenance must be called before continuing")]
    EpochMaintenanceNotComplete = 0x1785,
    /// 6022 - The stake pool must be updated before continuing
    #[error("The stake pool must be updated before continuing")]
    StakePoolNotUpdated = 0x1786,
    /// 6023 - Epoch Maintenance has already been completed
    #[error("Epoch Maintenance has already been completed")]
    EpochMaintenanceAlreadyComplete = 0x1787,
    /// 6024 - Validators are marked for immediate removal
    #[error("Validators are marked for immediate removal")]
    ValidatorsNeedToBeRemoved = 0x1788,
    /// 6025 - Validator not marked for removal
    #[error("Validator not marked for removal")]
    ValidatorNotMarkedForRemoval = 0x1789,
    /// 6026 - Validators have not been removed
    #[error("Validators have not been removed")]
    ValidatorsHaveNotBeenRemoved = 0x178A,
    /// 6027 - Validator List count does not match state machine
    #[error("Validator List count does not match state machine")]
    ListStateMismatch = 0x178B,
    /// 6028 - Vote account does not match
    #[error("Vote account does not match")]
    VoteAccountDoesNotMatch = 0x178C,
    /// 6029 - Validator needs to be marked for removal
    #[error("Validator needs to be marked for removal")]
    ValidatorNeedsToBeMarkedForRemoval = 0x178D,
    /// 6030 - Invalid stake state
    #[error("Invalid stake state")]
    InvalidStakeState = 0x178E,
}

impl solana_program::program_error::PrintProgramError for StewardError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}
